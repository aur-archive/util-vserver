diff -Nur util-vserver-0.30.216-pre3029.orig/scripts/Makefile-files util-vserver-0.30.216-pre3029/scripts/Makefile-files
--- util-vserver-0.30.216-pre3029.orig/scripts/Makefile-files	   2012-04-03 21:58:56.489684478 -0500
+++ util-vserver-0.30.216-pre3029/scripts/Makefile-files        2012-04-03 21:59:31.239683576 -0500
@@ -50,6 +50,7 @@ scripts_pkglib_src_DTA =	scripts/functio
 				scripts/vserver-build.rsync \
 				scripts/vserver-build.clone \
 				scripts/vserver-build.pacman \
+				scripts/vserver-build.archbootstrap \
 				scripts/vserver-build.functions \
 				scripts/vserver-build.functions.apt \
 				scripts/vserver-build.functions.rpm \
@@ -65,7 +66,8 @@ scripts_pkglib_src_DTA =	scripts/functio
 
 scripts_pkglib_gen_DTA =	scripts/util-vserver-vars
 
-scripts_pkglib_src_SCRPTS =	scripts/pkgmgmt \
+scripts_pkglib_src_SCRPTS =	scripts/arch-bootstrap.sh \
+				scripts/pkgmgmt \
 				scripts/vapt-get-worker \
 				scripts/vpkg \
 				scripts/vrpm-worker \
diff -Nur util-vserver-0.30.216-pre3029.orig/scripts/arch-bootstrap.sh util-vserver-0.30.216-pre3029/scripts/arch-bootstrap.sh
--- util-vserver-0.30.216-pre3029.orig/scripts/arch-bootstrap.sh util-vserver-0.30.216-pre3029/scripts/arch-bootstrap.sh	1969-12-31 18:00:00.000000000 -0600
+++ util-vserver-0.30.216-pre3029/scripts/arch-bootstrap.sh	2012-04-03 12:40:25.962746134 -0500
@@ -0,0 +1,139 @@
+#!/bin/bash
+
+# arch-bootstrap: Bootstrap a base Arch Linux system.
+#
+# Depends: coreutils, wget, sed, awk, tar, gzip, chroot, xz
+# Bug tracker: http://code.google.com/p/tokland/issues
+# Author: Arnau Sanchez <tokland@gmail.com>
+#
+# Some examples:
+#
+#   $ bash arch-bootstrap.sh myarch 
+#   $ bash arch-bootstrap.sh myarch x86_64 
+#   $ bash arch-bootstrap.sh myarch x86_64 "ftp://ftp.archlinux.org"
+#
+# And then chroot to the bootstrapped distro (administrator: root/root):
+#
+#   $ sudo chroot myarch
+
+set -e
+
+# Output to standard error
+stderr() { echo "$@" >&2; }
+
+# Output debug message to standard error
+debug() { stderr "--- $@"; }
+
+# Extract href attribute from HTML link
+extract_href() { sed -n '/<a / s/^.*<a [^>]*href="\([^\"]*\)".*$/\1/p'; }
+
+# Simple wrapper around wget
+fetch() { wget -c --passive-ftp --quiet "$@"; }
+
+### Main
+
+# Packages needed by pacman (BASIC_PACKAGES) has been obtained this way:
+# 
+#   $ for PACKAGE in $(ldd /usr/bin/pacman | grep "=> /" | awk '{print $3}'); do 
+#       pacman -Qo $PACKAGE 
+#     done | awk '{print $5}' | sort -u | xargs
+BASIC_PACKAGES=(acl attr bzip2 expat glibc libarchive libfetch openssl pacman 
+                pacman-mirrorlist xz zlib)
+EXTRA_PACKAGES=(filesystem coreutils bash grep awk file tar syslog-ng initscripts vim)
+DEFAULT_REPO_URL="http://mirrors.kernel.org/archlinux"
+DEFAULT_ARCH=i686
+
+configure_pacman() {
+  local DEST=$1; local ARCH=$2
+  cp "/etc/resolv.conf" "$DEST/etc/resolv.conf"
+  echo "Server = $REPO_URL/\$repo/os/$ARCH" >> "$DEST/etc/pacman.d/mirrorlist"
+}
+
+minimal_configuration() {
+  local DEST=$1
+  echo "root:x:0:0:root:/root:/bin/bash" > "$DEST/etc/passwd"
+  # create root user (password root)
+  echo "root:!:14657::::::" > "$DEST/etc/shadow"
+  touch "$DEST/etc/group"
+  echo "bootstrap" > "$DEST/etc/hostname"
+  test -c "$DEST/dev/null" || mknod "$DEST/dev/null" c 1 3
+}
+
+check_compressed_integrity() {
+  local FILEPATH=$1
+  case "$FILEPATH" in
+  *.gz) gunzip -t "$FILEPATH";;
+  *.xz) xz -t "$FILEPATH";;
+  *) debug "Error: unknown package format: $FILEPATH"
+     return 1;;
+  esac
+}
+
+uncompress() {
+  local FILEPATH=$1; local DEST=$2
+  case "$FILEPATH" in
+  *.gz) tar xzf "$FILEPATH" -C "$DEST";;
+  *.xz) xz -dc "$FILEPATH" | tar x -C "$DEST";;
+  *) debug "Error: unknown package format: $FILEPATH"
+     return 1;;
+  esac
+}  
+
+### Main
+
+if test $# -lt 1; then
+  stderr "Usage: $(basename "$0") DESTINATION_DIRECTORY [i686|x86_64] [REPO_URL]"
+  exit 2
+fi
+   
+DEST=$1
+ARCH=${2:-$DEFAULT_ARCH}
+REPO_URL=${3:-$DEFAULT_REPO_URL}
+
+PACKDIR="/tmp/arch-bootstrap"
+REPO="${REPO_URL%/}/core/os/$ARCH"
+debug "using core repository: $REPO"
+
+debug "create package directory: $PACKDIR"
+mkdir -p "$PACKDIR"
+
+LIST_HTML_FILE="$PACKDIR/core_os_$ARCH-index.html"
+if ! test -s "$LIST_HTML_FILE"; then 
+  debug "fetch packages list: $REPO/"
+  # Force trailing '/' needed by FTP servers.
+  fetch -O "$LIST_HTML_FILE" "$REPO/" ||
+    { debug "Error: cannot fetch packages list: $REPO"; exit 1; }
+fi
+
+debug "packages HTML index: $LIST_HTML_FILE"
+LIST=$(< "$LIST_HTML_FILE" extract_href | awk -F"/" '{print $NF}' | sort -rn)
+test "$LIST" || { debug "Error processing list file: $LIST_HTML_FILE"; exit 1; }  
+
+debug "create destination directory: $DEST"
+mkdir -p "$DEST"
+
+debug "pacman package and dependencies: ${BASIC_PACKAGES[*]}"
+for PACKAGE in ${BASIC_PACKAGES[*]}; do
+  FILE=$(echo "$LIST" | grep -m1 "^$PACKAGE-[[:digit:]].*\(\.gz\|\.xz\)$")
+  test "$FILE" || { debug "Error: cannot find package: $PACKAGE"; exit 1; }
+  FILEPATH="$PACKDIR/$FILE"
+  if ! test -e "$FILEPATH" || ! check_compressed_integrity "$FILEPATH"; then
+    debug "download package: $REPO/$FILE"
+    fetch -O "$FILEPATH" "$REPO/$FILE"
+  fi
+  debug "uncompress package: $FILEPATH"
+  uncompress "$FILEPATH" "$DEST"
+done
+
+debug "configure DNS and pacman"
+configure_pacman "$DEST" "$ARCH"
+
+debug "re-install basic packages and install extra packages: ${EXTRA_PACKAGES[*]}"
+chroot "$DEST" /usr/bin/pacman --noconfirm --arch $ARCH \
+       -Syf ${BASIC_PACKAGES[*]} ${EXTRA_PACKAGES[*]}
+
+debug "minimal configuration (DNS, passwd, hostname, mirrorlist, ...)" 
+configure_pacman "$DEST" "$ARCH"
+minimal_configuration "$DEST"
+
+debug "done! you can now use the system (chroot \"$DEST\")"
diff -Nur util-vserver-0.30.216-pre3029.orig/scripts/vserver-build util-vserver-0.30.216-pre3029/scripts/vserver-build
--- util-vserver-0.30.216-pre3029.orig/scripts/vserver-build	2011-05-15 02:36:31.000000000 +1000
+++ util-vserver-0.30.216-pre3029/scripts/vserver-build	2011-05-29 22:03:41.577722496 +1000
@@ -81,6 +81,8 @@ Possible methods are:
                 ...  clones a guest by linking unified files and copying the rest
     pacman      ... -- -d <distribution> [-a <architecture>] [-c <cache-dir>] [-m <mirror>]
                 ...  bootstraps the vserver using Arch Linux's pacman package manager
+    archbootstrap ... -- -d <distribution> [-a architecture>] [-m <mirror>]
+		  ...  bootstraps the vserver with Arch's 'archbootstrap' package
 
 Please report bugs to $PACKAGE_BUGREPORT"
     exit 0
@@ -144,7 +146,7 @@ setup_setDefaults "$VSERVER_NAME"
 
 case x"$method" in
     (xlegacy)	exec $_VSERVER_LEGACY "$VSERVER_NAME" build "$@" ;;
-    (xapt-rpm|xcopy|xskeleton|xdebootstrap|xyum|xrpm|xtemplate|xfai|xrsync|xclone|xpacman|xurpmi)
+    (xapt-rpm|xcopy|xskeleton|xdebootstrap|xyum|xrpm|xtemplate|xfai|xrsync|xclone|xpacman|xarchbootstrap|xurpmi)
 		. $__PKGLIBDIR/vserver-build.$method
 		;;
     (x)		panic $"No build-method specified";;
diff -Nur util-vserver-0.30.216-pre3029.orig/scripts/vserver-build.archbootstrap util-vserver-0.30.216-pre3029/scripts/vserver-build.archbootstrap
--- util-vserver-0.30.216-pre3029.orig/scripts/vserver-build.archbootstrap	1970-01-01 10:00:00.000000000 +1000
+++ util-vserver-0.30.216-pre3029/scripts/vserver-build.archbootstrap	2011-05-29 22:03:41.577722496 +1000
@@ -0,0 +1,135 @@
+# $Id$
+
+# Copyright (C) 2011 Iv√°n de Gyves <fox@foxburu.mx>
+# Heavily based on the work of (C) Jonathan Liu <net147@gmail.com>
+#
+# This program is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; version 2 of the License.
+#
+# This program is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+#
+# You should have received a copy of the GNU General Public License
+# along with this program; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
+
+# arch-bootstrap.sh myarch x86_64 "ftp://ftp.archlinux.org"
+
+function findArchBootstrap()
+{
+    test ! -x "$ABST" || return 0
+
+    ABST=$(which arch-bootstrap.sh 2>/dev/null) ||
+    ABST=$(which arch-bootstrap 2>/dev/null) || 
+    ABST=$(which ./arch-bootstrap.sh 2>/dev/null) ||{
+        echo "Could not find 'arch-bootstrap' or 'arch-bootstrap.sh' installed." >&2
+        exit 1
+    }
+}
+
+function findMirror
+{
+    local file
+    findFile file "$__DISTRIBDIR/$DISTRIBUTION"/mirror ""
+    test -z "$file" || read MIRROR <"$file"
+
+    test -n "$MIRROR" || {
+        echo "Could not find a suitable mirror. Please specify a mirror with the -m option." >&2
+        exit 1
+    }
+}
+
+# Chrootsed Helper.
+chrootsed() {
+    local file="$1"
+    shift
+
+    sedtmp=$($_MKTEMP chrootsed.XXXXXX)
+
+    $_CHROOT_SH cat "$file" | $_SED "$@" > $sedtmp
+    $_CHROOT_SH truncate "$file" < $sedtmp
+
+    $_RM -f $sedtmp
+}
+
+function fixThings()
+{
+	cfgdir="$SETUP_CONFDIR"
+	vdir="$cfgdir"/vdir
+
+	# go to vdir for chroot-sh
+	pushd "$vdir" &>/dev/null
+	
+	echo ">>> Fixing before initpost..."
+	echo ">>> Entering ${vdir}"
+	
+	echo ">>>> Locking important packages..."
+	chrootsed /etc/pacman.conf \
+	-e 's#^\#IgnorePkg.*$#IgnorePkg'"$(printf '\011')"'= udev initscripts syslog-ng#'
+
+	echo ">>>> Linking syslog-ng.conf to etc..."
+	$_CHROOT_SH mv /etc/syslog-ng/syslog-ng.conf /etc/syslog-ng.conf
+	$_CHROOT_SH link /etc/syslog-ng.conf /etc/syslog-ng/syslog-ng.conf
+
+	# restore original directory
+	popd &>/dev/null
+}
+
+tmp=$(getopt -o '+d:a:c:m:' --long debug -n "$0" -- "$@") || exit 1
+eval set -- "$tmp"
+BASH="$(which bash)"
+ARCH="$(uname -m)"
+DISTRIBUTION=
+MIRROR=
+PACKAGES=
+ARGS=
+
+while true; do
+    case "$1" in
+	-d)		DISTRIBUTION=$2; shift;;
+    -a)     ARCH=$2; shift;;
+    -m)     MIRROR=$2; shift;;
+    --debug)    set -x;;
+    --)     shift; break ;;
+    *)      echo "vserver-build.archbootstrap: internal error: unrecognized option '$1'" >&2
+            exit 1
+            ;;
+    esac
+    shift
+done
+
+getDistribution
+
+base.init
+base.initFilesystem "$OPTION_FORCE"
+
+setup_writeOption "$VSERVER_NAME"
+setup_writeInitialFstab
+
+findArchBootstrap
+findMirror
+
+ARGS=$VDIR
+
+if test -n "$ARCH"; then
+	ARGS="${ARGS} ${ARCH}"
+fi
+
+if test -n "$MIRROR"; then
+	ARGS="${ARGS} ${MIRROR}"
+fi
+
+test -z "$BUILD_INITPRE"  || "$BUILD_INITPRE"  "$SETUP_CONFDIR" "$UTIL_VSERVER_VARS"
+
+$BASH ${ABST} ${ARGS}
+
+fixThings
+
+test -z "$BUILD_INITPOST" || "$BUILD_INITPOST" "$SETUP_CONFDIR" "$UTIL_VSERVER_VARS"
+
+base.setSuccess
+
+# vim:set ts=4 sts=4 sw=4 et:
